version: '3.8'
services:
  nginx:
    image: nginx:latest
    container_name: nginx-gateway
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - platform-frontend
      - platform-backend
      - chat
    networks:
      - web-platform-service

  platform-frontend:
    container_name: frontend
    build: 
      context: ./client_platform
    depends_on:
      - platform-backend
    networks:
      - web-platform-service
  platform-backend:
    container_name: backend-server
    build: 
      context: ./server_platform
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=database-platform          # Ссылка на имя контейнера базы данных
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - KAFKA_HOST=${KAFKA_HOST}
    depends_on:
      - database
      - sender
      - kafka
    networks:
      - web-platform-service
      - web-backend-network
  chat:
    container_name: chat-server
    environment:
      - POSTGRES_HOST=database-platform 
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_CHAT_NAME}
      - POSTGRES_PORT=5432
    build: 
      context: ./server_chat
    depends_on:
      - database
    networks:
      - web-platform-service
      - web-backend-network
  sender:
    container_name: sender-server
    environment:
      - KAFKA_HOST=${KAFKA_HOST}
    build: 
      context: ./server_sender
    networks:
      - web-backend-network
    ports:
      - 7878:7878

  # База данных
  database:
    image: 'postgres:latest'
    container_name: database-platform
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - 'POSTGRES_DB=${DB_NAME}'
      - 'POSTGRES_PASSWORD=${DB_PASSWORD}' # изменить пароль для подключения
      - 'POSTGRES_USER=${DB_USER}' # изменить пользователя
    networks:
      - web-backend-network
    ports:
      - 5434:5432
  
  # Контейнеры для кафки
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper-platform
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-service-network
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-platform
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-platform:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_HOST}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - web-backend-network
      - kafka-service-network


networks:
  web-platform-service:
    driver: bridge
  kafka-service-network:
    driver: bridge
  web-backend-network:
    driver: bridge

volumes:
  db-data: